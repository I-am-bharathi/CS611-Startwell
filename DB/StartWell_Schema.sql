DROP SCHEMA IF EXISTS StartwellDB;
CREATE SCHEMA StartwellDB;
USE StartwellDB;
​
CREATE TABLE UserBuckets (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    BucketType VARCHAR (100) NOT NULL UNIQUE,
    BucketDesc VARCHAR(100),
    PRIMARY KEY (SNo)
);
CREATE TABLE Users (
  UserID INT UNSIGNED NOT NULL AUTO_INCREMENT,
  EmailID VARCHAR(45) NOT NULL UNIQUE,
  UserType Enum('Admin','Provider','Customer'),
  Pass VARCHAR (45) NOT NULL,
  First_Name VARCHAR(45) NOT NULL,
  Last_Name VARCHAR(45) NOT NULL,
  DOB DATE  NULL,
  Sex VARCHAR(20),
  LicenseID VARCHAR(25) UNIQUE,
  BucketType VARCHAR(10),
  Current_Status VARCHAR(20),
  Subscription VARCHAR(20),
  last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  resetPasswordToken varchar(150),
  resetPasswordTokenExpires varchar(150),
  PRIMARY KEY  (UserID),
  FOREIGN KEY (BucketType) REFERENCES UserBuckets(BucketType)
);
CREATE TABLE SCategories (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    CategoryID VARCHAR(100) NOT NULL UNIQUE,
    BucketType VARCHAR(100) NOT NULL,
    CatDesc VARCHAR(100),
    PRIMARY KEY (SNo),
    FOREIGN KEY (BucketType) REFERENCES UserBuckets (BucketType)
);
CREATE TABLE Surveys (
    SurveyID INT UNSIGNED NOT NULL AUTO_INCREMENT,
    SurveyTitle VARCHAR(100) NOT NULL,
    NoQues INT UNSIGNED NOT NULL,
    OptDesc VARCHAR(30) NULL,
    CategoryID VARCHAR(100) NOT NULL,
    SurveyStatus CHAR(1) NOT NULL,
    PRIMARY KEY(SurveyID),
    FOREIGN KEY (CategoryID) REFERENCES SCategories (CategoryID)
);
CREATE TABLE UserSurveyHeader (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    UserID INT UNSIGNED NOT NULL,
    SurveyID INT UNSIGNED NOT NULL,
    AttemptID INT UNSIGNED  NULL,
    SurveyStatus CHAR(1) NOT NULL,
    Time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (SNo),
    FOREIGN KEY (SurveyID) REFERENCES Surveys (SurveyID),
    FOREIGN KEY (UserID) REFERENCES Users (UserID),
    UNIQUE KEY Attempts (UserID, SurveyID, AttemptID)
);
CREATE TABLE SQuestions (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    SurveyID INT UNSIGNED NOT NULL,
    QuesID INT UNSIGNED NOT NULL,
    QText VARCHAR(200) NOT NULL,
    RespType CHAR(10) NOT NULL,
Weights double;
    PRIMARY KEY (SNo),
    FOREIGN KEY (SurveyID) REFERENCES Surveys (SurveyID)
);
CREATE TABLE QOptions (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    SurveyID INT UNSIGNED NOT NULL,
    QuesID INT UNSIGNED NOT NULL,
    OptID INT UNSIGNED NOT NULL,
    OptText VARCHAR (100) NOT NULL,
    PRIMARY KEY (SNo),
    FOREIGN KEY (SurveyID) REFERENCES Surveys (SurveyID)
);

CREATE TABLE UserResponses (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    UserID INT UNSIGNED NOT NULL,
    UserType Enum('Admin','Provider','Customer'),
    SurveyID INT UNSIGNED NOT NULL,
    QuesID INT UNSIGNED NOT NULL,
    OptID INT UNSIGNED NOT NULL,
    AttemptID INT UNSIGNED  NULL,
    Response VARCHAR(100),
    Time_stamp TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (SNo),
    FOREIGN KEY (UserID) REFERENCES Users (UserID),
    FOREIGN KEY (SurveyID) REFERENCES Surveys (SurveyID)
);
​
CREATE TABLE CrossReference (
	SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    SurveyID_Customer INT UNSIGNED NOT NULL,
    QuesID_Customer INT UNSIGNED NOT NULL,
    SurveyID_Provider INT UNSIGNED NOT NULL,
    QuesID_Provider INT UNSIGNED NOT NULL,
    PRIMARY KEY (SNo)
);
​
​
CREATE TABLE RelTypes (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    RelType VARCHAR(45) NOT NULL UNIQUE,
    RelDesc VARCHAR(90),
    PRIMARY KEY (SNo)
);
CREATE TABLE newsletter (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    email VARCHAR(45) NOT NULL UNIQUE,
    PRIMARY KEY (SNo)
);
CREATE TABLE contactUs (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    email VARCHAR(45) NOT NULL,
    subject VARCHAR(45) NOT NULL,
    message VARCHAR(200),
    PRIMARY KEY (SNo)
);
​
CREATE TABLE UserRelationships (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    UserID INT UNSIGNED NOT NULL,
    RelType VARCHAR(45) NOT NULL,
    LinkedUserID VARCHAR (20) NOT NULL,
    PRIMARY KEY (SNo),
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (RelType) REFERENCES RelTypes(RelType)
);
CREATE TABLE WebsiteContent (
    SNo INT UNSIGNED NOT NULL AUTO_INCREMENT,
    BucketType VARCHAR(45) NOT NULL,
    ContentType CHAR(1) NOT NULL,
    LocationID VARCHAR(45) NOT NULL,
    URL VARCHAR (90) NOT NULL,
    PRIMARY KEY (SNo),
    FOREIGN KEY (BucketType) REFERENCES UserBuckets(BucketType)
);